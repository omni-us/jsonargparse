version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Build wheel package
          command: ./setup.py bdist_wheel sdist
      - persist_to_workspace:
          root: .
          paths:
            - ./dist/*.whl
            - ./dist/*.tar.gz
  test-pypy3:
    docker:
      - image: pypy:3
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run unit tests
          command: |
            pip3 install $(ls ./dist/*.whl)[test_no_urls]
            pypy3 -m jsonargparse_tests coverage xml coverage_pypy3.xml
            pip3 install $(ls ./dist/*.whl)[test,all]
            pypy3 -m jsonargparse_tests coverage xml coverage_pypy3_all.xml
      - persist_to_workspace:
          root: .
          paths:
            - ./coverage_*.xml
  test-py38: &test-py38
    docker:
      - image: circleci/python:3.8
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run unit tests
          command: |
            py=$(python3 --version | sed -r 's|.* 3\.([0-9]+)\..*|3.\1|')
            virtualenv -p python3 venv$py
            . venv$py/bin/activate
            pip3 install $(ls ./dist/*.whl)[test_no_urls]
            python3 -m jsonargparse_tests coverage xml coverage_py$py.xml
            pip3 install $(ls ./dist/*.whl)[test,all]
            python3 -m jsonargparse_tests coverage xml coverage_py${py}_all.xml
      - persist_to_workspace:
          root: .
          paths:
            - ./coverage_*.xml
  test-py39:
    <<: *test-py38
    docker:
      - image: circleci/python:3.9
  test-py37:
    <<: *test-py38
    docker:
      - image: circleci/python:3.7
  test-py36:
    <<: *test-py38
    docker:
      - image: circleci/python:3.6
  codecov:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Code coverage
          command: |
            for py in 3.6 3.7 3.8 3.9 py3; do
              bash <(curl -s https://codecov.io/bash) \
                -t $CODECOV_TOKEN_JSONARGPARSE \
                -F py$py \
                -f coverage_py$py.xml
              bash <(curl -s https://codecov.io/bash) \
                -t $CODECOV_TOKEN_JSONARGPARSE \
                -F py${py}_all \
                -f coverage_py${py}_all.xml
            done
  publish-pypi:
    docker:
      - image: mauvilsa/docker-twine:1.11.0
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Publish Release on PyPI
          command: twine upload --username "${PYPI_USER}" --password "${PYPI_PASS}" ./dist/*.whl ./dist/*.tar.gz

workflows:
  version: 2
  build-test-publish:
    jobs:
      - build: &buildreq
          filters: &tagfilter
            tags:
              only: /^v\d+\.\d+\.\d+.*$/
      - test-py38: &testreq
          <<: *buildreq
          requires:
            - build
      - test-py39:
          <<: *testreq
      - test-py37:
          <<: *testreq
      - test-py36:
          <<: *testreq
      - test-pypy3:
          <<: *testreq
      - codecov:
          <<: *testreq
          requires:
            - test-pypy3
            - test-py39
            - test-py38
            - test-py37
            - test-py36
      - publish-pypi:
          filters:
            branches:
              ignore: /.*/
            <<: *tagfilter
          context: pypi-upload-context
          requires:
            - codecov
