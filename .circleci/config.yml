version: 2.1

jobs:
  build:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: Build wheel package
          command: |
            pip3 install -U build
            python3 -m build
      - persist_to_workspace:
          root: .
          paths:
            - ./dist/*.whl
            - ./dist/*.tar.gz
  test-py38: &test-py38
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - run:
          name: Run unit tests
          command: |
            py=$(python3 --version | sed -r 's|.* 3\.([0-9]+)\..*|3.\1|')
            pip3 install .[coverage]
            pip3 uninstall -y argcomplete
            pytest --cov --cov-report=term --cov-report=xml:coverage_py$py.xml
            pip3 install .[test,all]
            pytest --cov --cov-report=term --cov-report=xml:coverage_py${py}_all.xml
            sed -i '/^from __future__ import annotations$/d' jsonargparse_tests/test_*.py
            pytest --cov --cov-report=term --cov-report=xml:coverage_py${py}_types.xml
      - persist_to_workspace:
          root: .
          paths:
            - ./coverage_*.xml
  test-py312:
    <<: *test-py38
    docker:
      - image: cimg/python:3.12
  test-py311:
    <<: *test-py38
    docker:
      - image: cimg/python:3.11
  test-py310:
    <<: *test-py38
    docker:
      - image: cimg/python:3.10
  test-py39:
    <<: *test-py38
    docker:
      - image: cimg/python:3.9
  test-py37:
    <<: *test-py38
    docker:
      - image: cimg/python:3.7
  test-py310-pydantic-v1:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: Run unit tests
          command: |
            py=$(python3 --version | sed -r 's|.* 3\.([0-9]+)\..*|3.\1|')
            pip3 install .[coverage]
            pip3 install "pydantic<2"
            pytest --cov --cov-report=term --cov-report=xml:coverage_py${py}_pydantic1.xml jsonargparse_tests/test_dataclass_like.py
            sed -i "s|import pydantic|import pydantic.v1 as pydantic|" jsonargparse_tests/test_dataclass_like.py
            sed -i "s|^annotated = .*|annotated = False|" jsonargparse_tests/test_dataclass_like.py
            sed -i "s|test_pydantic_types|_test_pydantic_types|" jsonargparse_tests/test_dataclass_like.py
            pip install "pydantic>=2"
            pytest --cov --cov-report=term --cov-report=xml:coverage_py${py}_pydantic2.xml jsonargparse_tests/test_dataclass_like.py
      - persist_to_workspace:
          root: .
          paths:
            - ./coverage_*.xml
  codecov:
    docker:
      - image: curlimages/curl:latest
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Code coverage
          command: |
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            chmod +x codecov
            for py in 3.7 3.8 3.9 3.10 3.11 3.12; do
              for suffix in "" _all _types _pydantic1 _pydantic2; do
                if [ -f coverage_py${py}${suffix}.xml ]; then
                  ./codecov \
                    --nonZero \
                    --rootDir $PWD \
                    --token $CODECOV_TOKEN_JSONARGPARSE \
                    --flags py${py}${suffix} \
                    --file coverage_py${py}${suffix}.xml
                fi
              done
            done
  test-py310-installed:
    docker:
      - image: cimg/python:3.10
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run unit tests
          command: |
            pip3 install $(ls ./dist/*.whl)[test,all]
            python3 -m jsonargparse_tests
  publish-pypi:
    docker:
      - image: cimg/python:3.10
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Publish Release on PyPI
          command: |
            pip3 install -U twine
            twine upload --username __token__ --password "${PYPI_TOKEN}" ./dist/*.whl ./dist/*.tar.gz

workflows:
  version: 2
  build-test-publish:
    jobs:
      - build: &buildreq
          filters: &tagfilter
            tags:
              only: /^v\d+\.\d+\.\d+.*$/
      - test-py38:
          <<: *buildreq
      - test-py312:
          <<: *buildreq
      - test-py311:
          <<: *buildreq
      - test-py310:
          <<: *buildreq
      - test-py39:
          <<: *buildreq
      - test-py37:
          <<: *buildreq
      - test-py310-pydantic-v1:
          <<: *buildreq
      - codecov:
          requires:
            - test-py312
            - test-py311
            - test-py310
            - test-py39
            - test-py38
            - test-py37
            - test-py310-pydantic-v1
      - test-py310-installed:
          <<: *buildreq
          requires:
            - build
      - publish-pypi:
          filters:
            branches:
              ignore: /.*/
            <<: *tagfilter
          context: pypi-upload-context
          requires:
            - codecov
            - test-py310-installed
