version: 2.1

jobs:
  build:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: Build wheel package
          command: |
            pip3 install -U setuptools
            ./setup.py bdist_wheel sdist
      - persist_to_workspace:
          root: .
          paths:
            - ./dist/*.whl
            - ./dist/*.tar.gz
  test-py38: &test-py38
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - run:
          name: Run unit tests
          command: |
            py=$(python3 --version | sed -r 's|.* 3\.([0-9]+)\..*|3.\1|')
            virtualenv -p python3 venv$py
            . venv$py/bin/activate
            pip3 install .[coverage]
            pytest --cov --cov-report=term --cov-report=xml:coverage_py$py.xml
            pip3 install .[test,all]
            pytest --cov --cov-report=term --cov-report=xml:coverage_py${py}_all.xml
            sed -i '/^from __future__ import annotations$/d' jsonargparse_tests/test_*.py
            pytest --cov --cov-report=term --cov-report=xml:coverage_py${py}_types.xml
      - persist_to_workspace:
          root: .
          paths:
            - ./coverage_*.xml
  test-py311:
    <<: *test-py38
    docker:
      - image: cimg/python:3.11
  test-py310:
    <<: *test-py38
    docker:
      - image: cimg/python:3.10
  test-py39:
    <<: *test-py38
    docker:
      - image: cimg/python:3.9
  test-py37:
    <<: *test-py38
    docker:
      - image: cimg/python:3.7
  test-py36:
    docker:
      - image: cimg/python:3.6
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run unit tests
          command: |
            py=$(python3 --version | sed -r 's|.* 3\.([0-9]+)\..*|3.\1|')
            virtualenv -p python3 venv$py
            . venv$py/bin/activate
            pip3 install $(ls ./dist/*.whl)[coverage]
            dir=$(python3 -c "print(__import__('jsonargparse').__file__)" | sed 's|jsonargparse/[^/]*$||')
            code_dir=$dir/jsonargparse
            tests_dir=$dir/jsonargparse_tests
            rm $tests_dir/test_backports.py
            sed -i '/^from __future__ import annotations$/d' $tests_dir/test_*.py
            pytest --cov=$code_dir --cov-report=term --cov-report=xml:coverage_py$py.xml $tests_dir
            pip3 install $(ls ./dist/*.whl)[test,all]
            pytest --cov=$code_dir --cov-report=term --cov-report=xml:coverage_py${py}_all.xml $tests_dir
      - persist_to_workspace:
          root: .
          paths:
            - ./coverage_*.xml
  codecov:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Code coverage
          command: |
            for py in 3.6 3.7 3.8 3.9 3.10 3.11; do
              for suffix in "" "_all" "_types"; do
                if [ -f coverage_py${py}${suffix}.xml ]; then
                  bash <(curl -s https://codecov.io/bash) \
                    -Z \
                    -t $CODECOV_TOKEN_JSONARGPARSE \
                    -F py${py}${suffix} \
                    -f coverage_py${py}${suffix}.xml
                fi
              done
            done
  test-py310-installed:
    docker:
      - image: cimg/python:3.10
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run unit tests
          command: |
            virtualenv -p python3 venv$py
            . venv$py/bin/activate
            pip3 install $(ls ./dist/*.whl)[test,all]
            python3 -m jsonargparse_tests
  publish-pypi:
    docker:
      - image: cimg/python:3.10
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Publish Release on PyPI
          command: |
            pip3 install -U twine
            twine upload --username __token__ --password "${PYPI_TOKEN}" ./dist/*.whl ./dist/*.tar.gz

workflows:
  version: 2
  build-test-publish:
    jobs:
      - build: &buildreq
          filters: &tagfilter
            tags:
              only: /^v\d+\.\d+\.\d+.*$/
      - test-py38:
          <<: *buildreq
      - test-py311:
          <<: *buildreq
      - test-py310:
          <<: *buildreq
      - test-py39:
          <<: *buildreq
      - test-py37:
          <<: *buildreq
      - test-py36:
          <<: *buildreq
          requires:
            - build
      - codecov:
          requires:
            - test-py311
            - test-py310
            - test-py39
            - test-py38
            - test-py37
            - test-py36
      - test-py310-installed:
          <<: *buildreq
          requires:
            - build
      - publish-pypi:
          filters:
            branches:
              ignore: /.*/
            <<: *tagfilter
          context: pypi-upload-context
          requires:
            - build
            - codecov
