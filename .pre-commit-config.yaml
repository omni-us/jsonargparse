fail_fast: true

ci:
  skip:
  - mypy
  - pycodestyle
  - pylint
  - tox
  - coverage

repos:

- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.3.0
  hooks:
  - id: end-of-file-fixer
  - id: trailing-whitespace

- repo: https://github.com/pycqa/isort
  rev: 5.10.1
  hooks:
  - id: isort

- repo: https://github.com/PyCQA/autoflake
  rev: v1.6.1
  hooks:
  - id: autoflake

- repo: local
  hooks:

  - id: twine-check
    name: twine check [on bumpversion]
    entry: bash -c '
      if [ "${BUMPVERSION_NEW_VERSION+x}" = "" ]; then
        echo "$(tput setaf 6) Skipped, only runs when bumping version $(tput sgr0)";
      else
        ./setup.py bdist_wheel;
        twine check dist/*.whl;
      fi'
    language: system
    pass_filenames: false
    verbose: true

  - id: changelog-check
    name: changelog check [on bumpversion]
    entry: bash -c '
      if [ "${BUMPVERSION_NEW_VERSION+x}" = "" ]; then
        echo "$(tput setaf 6) Skipped, only runs when bumping version $(tput sgr0)";
      else
        CHANGELOG=$(grep -E "^v.+\..+\..+ \(....-..-..\)" CHANGELOG.rst | head -n 1);
        EXPECTED="v$BUMPVERSION_NEW_VERSION ($(date -u +%Y-%m-%d))";
        if [ "$CHANGELOG" != "$EXPECTED" ] && [ $(echo $BUMPVERSION_NEW_VERSION | grep -cE "[0-9.]+(\.dev|rc)[0-9]+") = 0 ]; then
          if [ ! -z "${BUMPVERSION_UPDATE_CHANGELOG+x}" ] && [ $(grep -c "^v$BUMPVERSION_NEW_VERSION " CHANGELOG.rst) = 1 ]; then
            sed -i "s|^v$BUMPVERSION_NEW_VERSION .*|$EXPECTED|" CHANGELOG.rst;
            git add CHANGELOG.rst;
          else
            echo "Expected latest release in CHANGELOG.rst to be $EXPECTED. Set BUMPVERSION_UPDATE_CHANGELOG to auto update.";
            exit 1;
          fi
        fi
      fi'
    language: system
    pass_filenames: false
    verbose: true

  - id: circleci-config-validate
    name: circleci config validate -c .circleci/config.yml
    entry: bash -c '
      if [ "$(which circleci)" = "" ]; then
        echo "$(tput setaf 6) Skipped, circleci command not found $(tput sgr0)";
      else
        circleci config validate -c .circleci/config.yml;
      fi'
    language: system
    files: .circleci/config.yml
    pass_filenames: false
    verbose: true

  - id: mypy
    name: mypy jsonargparse*/*.py
    entry: bash -c "mypy jsonargparse*/*.py"
    language: system
    types: [python]
    pass_filenames: false
    verbose: true

  - id: pycodestyle
    name: pycodestyle
    entry: pycodestyle
    language: system
    types: [python]
    verbose: true

  - id: pylint
    name: pylint --rcfile=setup.cfg
    entry: pylint --rcfile=setup.cfg
    language: system
    types: [python]
    verbose: true

  - id: tox
    name: tox --parallel
    entry: tox --parallel
    language: system
    pass_filenames: false
    verbose: true

  - id: doctest
    name: sphinx-build -M doctest sphinx sphinx/_build sphinx/index.rst
    entry: bash -c '
      if [ "$(which sphinx-build)" = "" ]; then
        echo "$(tput setaf 6) Skipped, sphinx-build command not found $(tput sgr0)";
      else
        sphinx-build -M doctest sphinx sphinx/_build sphinx/index.rst;
      fi'
    language: system
    pass_filenames: false
    verbose: true

  - id: coverage
    name: ./setup.py test_coverage
    entry: ./setup.py test_coverage
    language: system
    pass_filenames: false
    verbose: true
