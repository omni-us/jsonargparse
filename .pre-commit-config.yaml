fail_fast: true
default_install_hook_types: [pre-commit, pre-push]

ci:
  skip:
  - twine-check
  - changelog-bump
  autofix_prs: true
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit suggestions'
  autoupdate_schedule: quarterly

repos:

- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.5.0
  hooks:
  - id: check-added-large-files
  - id: check-ast
  - id: check-case-conflict
  - id: check-docstring-first
  - id: end-of-file-fixer
  - id: mixed-line-ending
  - id: trailing-whitespace
    exclude: .bumpversion.cfg

- repo: https://github.com/psf/black
  rev: 24.3.0
  hooks:
  - id: black

- repo: https://github.com/astral-sh/ruff-pre-commit
  rev: v0.3.7
  hooks:
  - id: ruff
    args: ["--fix"]

- repo: https://github.com/asottile/yesqa
  rev: v1.5.0
  hooks:
  - id: yesqa

- repo: https://github.com/crate-ci/typos
  rev: v1.20.7
  hooks:
  - id: typos
    args: []
    verbose: true

- repo: https://github.com/pre-commit/mirrors-mypy
  rev: v1.9.0
  hooks:
  - id: mypy
    files: jsonargparse.*/.*.py
    stages: [pre-push]
    additional_dependencies:
      [
        types-PyYAML,
        types-requests,
      ]
    verbose: true

- repo: local
  hooks:

  - id: twine-check
    name: twine check [on bumpversion]
    entry: bash -c '
      set -e;
      if [ "${BUMPVERSION_NEW_VERSION+x}" = "" ]; then
        echo "$(tput setaf 6) Skipped, only runs when bumping version $(tput sgr0)";
      else
        python3 -m build --wheel;
        twine check dist/*.whl;
      fi'
    language: system
    pass_filenames: false
    verbose: true

  - id: changelog-bump
    name: changelog bump [on bumpversion]
    entry: bash -c '
      set -e;
      if [ "${BUMPVERSION_NEW_VERSION+x}" = "" ]; then
        echo "$(tput setaf 6) Skipped, only runs when bumping version $(tput sgr0)";
      else
        CHANGELOG=$(grep -E "^v.+\..+\..+ \(....-..-..\)" CHANGELOG.rst | head -n 1);
        EXPECTED="v$BUMPVERSION_NEW_VERSION ($(date -u +%Y-%m-%d))";
        if [ "$CHANGELOG" != "$EXPECTED" ] && [ $(echo $BUMPVERSION_NEW_VERSION | grep -cE "[0-9.]+(\.dev|rc)[0-9]+") = 0 ]; then
          if [ $(grep -c "^v$BUMPVERSION_NEW_VERSION " CHANGELOG.rst) = 1 ]; then
            echo "Updating the date for v$BUMPVERSION_NEW_VERSION in CHANGELOG.rst";
            sed -ir "s|^v$BUMPVERSION_NEW_VERSION .*|$EXPECTED|" CHANGELOG.rst;
            git add CHANGELOG.rst;
          else
            echo "Expected release in CHANGELOG.rst to be "$EXPECTED" or not have a definitive date.";
            exit 1;
          fi
        fi
      fi'
    language: system
    pass_filenames: false
    verbose: true

  - id: tox
    name: tox --parallel
    entry: tox --parallel
    stages: [pre-push]
    language: system
    pass_filenames: false
    verbose: true

  - id: test-without-future-annotations
    name: test-without-future-annotations
    entry: bash -c '
      set -e;
      TEST_DIR=$(mktemp -d -t _jsonargparse_tests_XXXXXX);
      cleanup () { rm -rf "$TEST_DIR"; };
      trap cleanup EXIT;
      cp jsonargparse_tests/*.py "$TEST_DIR";
      cd "$TEST_DIR";
      sed -ir "/^from __future__ import annotations$/d" *.py;
      pytest $TEST_DIR;'
    stages: [pre-push]
    language: system
    pass_filenames: false

  - id: test-pydantic-v1
    name: test-pydantic-v1
    entry: bash -c '
      set -e;
      TEST_DIR=$(mktemp -d -t _jsonargparse_tests_XXXXXX);
      cleanup () { rm -rf "$TEST_DIR"; };
      trap cleanup EXIT;
      python -m venv "$TEST_DIR/venv";
      . "$TEST_DIR/venv/bin/activate";
      pip install -e ".[test]";
      cp jsonargparse_tests/*.py "$TEST_DIR";
      cd "$TEST_DIR";
      pip install "pydantic<2";
      pytest test_dataclass_like.py;
      sed -ir "s|import pydantic|import pydantic.v1 as pydantic|" test_dataclass_like.py;
      sed -ir "s|^annotated = .*|annotated = False|" test_dataclass_like.py;
      sed -ir "s|test_pydantic_types|_test_pydantic_types|" test_dataclass_like.py;
      pip install "pydantic>=2";
      pytest test_dataclass_like.py;'
    stages: [pre-push]
    language: system
    pass_filenames: false

  - id: doctest
    name: sphinx-build -M doctest sphinx sphinx/_build sphinx/index.rst
    entry: bash -c '
      set -e;
      if [ "$(which sphinx-build)" = "" ]; then
        echo "$(tput setaf 6) Skipped, sphinx-build command not found $(tput sgr0)";
      else
        sphinx-build -M doctest sphinx sphinx/_build sphinx/index.rst;
      fi'
    stages: [pre-push]
    language: system
    pass_filenames: false
    verbose: true

  - id: coverage
    name: pytest -v -s --cov --cov-report=term --cov-report=html
    entry: pytest -v -s --cov --cov-report=term --cov-report=html
    stages: [pre-push]
    language: system
    pass_filenames: false
    verbose: true
